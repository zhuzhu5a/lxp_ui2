import time
import datetime

from selenium.webdriver import ActionChains

from page.Login_page import LoginPage
from page.CreationCentre.Content_menu.create_task_page import Task
from page.Admin.task_check import Taskcheck
from page.Admin.contest_check import Contestcheck
class Contest(LoginPage):
    def __init__(self, driver, url, user, pwd, org):
        self.driver = driver
        lp = LoginPage(driver)
        lp.login_successful(url, user, pwd, org)

        try:
            creator = ('#v-step_creator')
            self.click('cs', creator)
        except:
            print('没有创作中心')
        self.dt = datetime.datetime.now().strftime('%Y-%m-%d-%H:%M:%S')
        handles = self.driver.window_handles[-1]
        self.driver.switch_to.window(handles)
        time.sleep(2)
        self.click('cs', '#app > section > aside > div > ul > div:nth-child(3) > li')
        time.sleep(1)
        self.click('id', 'tab-contest')
    def create_task_team_contest(self,team_member,user, pwd, org):
        self.click('xpath','//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        self.input('xpath','//*[@placeholder="请输入比赛名称"]','团队比赛'+self.dt)
        self.input('xpath','//*[@placeholder="请输入团队人数"]',team_member)
        self.click('xpath','//*[@placeholder="请选择"]')
        time.sleep(1)
        self.locateElement('xpath','//*[@class="el-scrollbar__view el-select-dropdown__list"]')
        self.click('xpath','/html/body/div[2]/div[1]/div[1]/ul/li[3]')
        iframe=self.locateElement('xpath','//*[@title="Rich Text Area"]')
        self.driver.switch_to.frame(iframe)
        self.input('id','tinymce','该比赛为自动化测试比赛')
        self.driver.switch_to.default_content()
        time.sleep(1)
        self.click('xpath','//*[@placeholder="报名开始时间"]')
        time.sleep(1)
        self.click('xpath','//*[@class="available today"]')
        self.click('xpath','//*[@class="el-button el-picker-panel__link-btn el-button--default el-button--mini is-plain"]')
        self.click('xpath', '//*[@placeholder="报名结束时间"]')
        time.sleep(1)
        self.click('xpath', '//*[@class="available today"]')
        self.click('xpath','//*[@placeholder="比赛开始时间"]')
        time.sleep(1)
        self.click('xpath','/html/body/div[5]/div[1]/div/div[3]/table[1]/tbody/tr[7]/td[1]')
        self.click('xpath', '//*[@placeholder="比赛结束时间"]')
        time.sleep(1)
        self.click('xpath', '/html/body/div[6]/div[1]/div/div[3]/table[1]/tbody/tr[7]/td[2]')
        time.sleep(1)
        self.click('xpath','//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        self.click('xpath','/html/body/section/main/div/div[3]/form/div[4]/div/button')
        self.input('xpath','//*[@placeholder="请输入数量"]','1')
        self.input('xpath', '//*[@placeholder="请输入金额"]', '1')
        self.click('xpath','//*[@class="el-button el-button--primary is-round"]')
        #创建项目待续
        time.sleep(1)
        handles=self.driver.current_window_handle

        self.click('xpath','//*[@class="create-pro"]')
        self.input('xpath','//*[@placeholder="请输入名称"]','自动化创建项目')
        time.sleep(1)
        self.click('xpath','/html/body/section/main/div/div[3]/div[2]/div/div[2]/form/div[2]/div/button[2]')
        time.sleep(1)
        self.click('xpath','//*[@class="create-module"]')
        self.input('xpath', '//*[@placeholder="请输入名称"]', '自动化创建模块')
        time.sleep(1)
        self.click('xpath','/html/body/section/main/div/div[3]/div[2]/div/div[2]/form/div[2]/div/button[2]')
        time.sleep(1)
        self.click('xpath','//*[@class="el-button el-button--primary el-button--small is-plain is-round"]')
        time.sleep(1)
        self.click('xpath','//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        Task.biddingtask(self,'自动化测试比赛中工单','1')
        Taskcheck.taskCheck(self)
        handles = self.driver.window_handles
        self.driver.switch_to.window(handles[2])
        self.click('cs',
                   '#app > header > div > div.tw-flex-1.tw-flex.tw-justify-between.tw-items-center > div.tw-flex.tw-items-center.custom-space-x-s2 > div.tw-flex.tw-items-center.tw-space-x-2.custom-ml-s2 > div > div')
        self.locateElement('xpath', '/html/body/ul')
        try:
            tuichudenglu = self.locateElement('xpath', '/html/body/ul/li[10]/span')
            ActionChains(self.driver).move_to_element(tuichudenglu).perform()
            self.click('xpath', '/html/body/ul/li[10]/span')

        except:
            tuichudenglu2 = self.locateElement('xpath', '/html/body/ul/li[7]/span')
            ActionChains(self.driver).move_to_element(tuichudenglu2).perform()
            self.click('xpath', '/html/body/ul/li[7]/span')

        time.sleep(1)
        self.input('cs', '#pass-login > div:nth-child(1) > input',user )
        self.input('cs', '#pass-login > div:nth-child(2) > input', pwd)
        self.click('cs', '#pass-login > div.form-group.password-box > button')
        time.sleep(1)
        self.click('xpath',org)
        time.sleep(1)
        self.driver.switch_to.window(handles[1])
        self.driver.refresh()
        self.click('cs','#app > main > div > div.contain > div.con-container > div.op-list > div.op-right > button.el-button.el-button--primary.is-plain.is-round')
        time.sleep(1)
        self.click('xpath','/html/body/div[2]/div/div[2]/div/div[4]/div[1]')
        self.click('xpath','/html/body/div[2]/div/div[2]/div/div[6]/button[2]')
        button=self.locateElement('xpath','/html/body/section/main/div/div[3]/div[2]/div[3]/button')
        self.driver.execute_script("arguments[0].click();",button)
        time.sleep(1)
        self.click('xpath','//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        self.click('xpath','//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        self.input('xpath','//*[@type="password"]','123456')
        self.click('xpath', '//*[@class="el-button el-button--primary is-round"]')
        msg=self.text('xpath','//*[@class="el-message el-message--success"]')
        Contestcheck.contestCheck(self)
        print(msg)
        return msg

    def create_task_solo_contest(self, user, pwd, org):
        self.click('xpath', '//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        self.input('xpath', '//*[@placeholder="请输入比赛名称"]', '个人比赛' + self.dt)
        self.click('xpath','//*[@placeholder="选择比赛类型"]')
        self.locateElement('xpath','//*[@class="el-scrollbar__view el-select-dropdown__list"]')
        time.sleep(1)
        self.click('xpath','/html/body/div[2]/div[1]/div[1]/ul/li[2]')
        self.click('xpath', '//*[@placeholder="请选择"]')
        time.sleep(1)
        self.locateElement('xpath', '//*[@class="el-scrollbar__view el-select-dropdown__list"]')
        time.sleep(1)
        self.click('xpath', '/html/body/div[3]/div[1]/div[1]/ul/li[3]')
        iframe = self.locateElement('xpath', '//*[@title="Rich Text Area"]')
        self.driver.switch_to.frame(iframe)
        self.input('id', 'tinymce', '该比赛为自动化测试比赛')
        self.driver.switch_to.default_content()
        time.sleep(1)
        self.click('xpath', '//*[@placeholder="报名开始时间"]')
        time.sleep(1)
        self.click('xpath', '//*[@class="available today"]')
        self.click('xpath',
                   '//*[@class="el-button el-picker-panel__link-btn el-button--default el-button--mini is-plain"]')
        self.click('xpath', '//*[@placeholder="报名结束时间"]')
        time.sleep(1)
        self.click('xpath', '//*[@class="available today"]')
        self.click('xpath', '//*[@placeholder="比赛开始时间"]')
        time.sleep(1)
        self.click('xpath', '/html/body/div[6]/div[1]/div/div[3]/table[1]/tbody/tr[7]/td[1]')
        self.click('xpath', '//*[@placeholder="比赛结束时间"]')
        time.sleep(1)
        self.click('xpath', '/html/body/div[7]/div[1]/div/div[3]/table[1]/tbody/tr[7]/td[2]')
        time.sleep(1)
        self.click('xpath', '//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        self.click('xpath', '/html/body/section/main/div/div[3]/form/div[4]/div/button')
        self.input('xpath', '//*[@placeholder="请输入数量"]', '1')
        self.input('xpath', '//*[@placeholder="请输入金额"]', '1')
        self.click('xpath', '//*[@class="el-button el-button--primary is-round"]')
        # 创建项目待续
        time.sleep(1)
        handles = self.driver.current_window_handle

        self.click('xpath', '//*[@class="create-pro"]')
        self.input('xpath', '//*[@placeholder="请输入名称"]', '自动化创建项目')
        time.sleep(1)
        self.click('xpath', '/html/body/section/main/div/div[3]/div[2]/div/div[2]/form/div[2]/div/button[2]')
        time.sleep(1)
        self.click('xpath', '//*[@class="create-module"]')
        self.input('xpath', '//*[@placeholder="请输入名称"]', '自动化创建模块')
        time.sleep(1)
        self.click('xpath', '/html/body/section/main/div/div[3]/div[2]/div/div[2]/form/div[2]/div/button[2]')
        time.sleep(1)
        self.click('xpath', '//*[@class="el-button el-button--primary el-button--small is-plain is-round"]')
        time.sleep(1)
        self.click('xpath', '//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        Task.biddingtask(self, '自动化测试比赛中工单', '1')
        Taskcheck.taskCheck(self)
        handles = self.driver.window_handles
        self.driver.switch_to.window(handles[2])
        self.click('cs',
                   '#app > header > div > div.tw-flex-1.tw-flex.tw-justify-between.tw-items-center > div.tw-flex.tw-items-center.custom-space-x-s2 > div.tw-flex.tw-items-center.tw-space-x-2.custom-ml-s2 > div > div')
        self.locateElement('xpath', '/html/body/ul')
        try:
            tuichudenglu = self.locateElement('xpath', '/html/body/ul/li[10]/span')
            ActionChains(self.driver).move_to_element(tuichudenglu).perform()
            self.click('xpath', '/html/body/ul/li[10]/span')

        except:
            tuichudenglu2 = self.locateElement('xpath', '/html/body/ul/li[7]/span')
            ActionChains(self.driver).move_to_element(tuichudenglu2).perform()
            self.click('xpath', '/html/body/ul/li[7]/span')

        time.sleep(1)
        self.input('cs', '#pass-login > div:nth-child(1) > input', user)
        self.input('cs', '#pass-login > div:nth-child(2) > input', pwd)
        self.click('cs', '#pass-login > div.form-group.password-box > button')
        time.sleep(1)
        self.click('xpath', org)
        time.sleep(1)
        self.driver.switch_to.window(handles[1])
        self.driver.refresh()
        self.click('cs',
                   '#app > main > div > div.contain > div.con-container > div.op-list > div.op-right > button.el-button.el-button--primary.is-plain.is-round')
        time.sleep(1)
        self.click('xpath', '/html/body/div[2]/div/div[2]/div/div[4]/div[1]')
        self.click('xpath', '/html/body/div[2]/div/div[2]/div/div[6]/button[2]')
        button = self.locateElement('xpath', '/html/body/section/main/div/div[3]/div[2]/div[3]/button')
        self.driver.execute_script("arguments[0].click();", button)
        time.sleep(1)
        self.click('xpath', '//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        self.click('xpath', '//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        self.input('xpath', '//*[@type="password"]', '123456')
        self.click('xpath', '//*[@class="el-button el-button--primary is-round"]')
        time.sleep(1)
        msg = self.text('xpath', '//*[@class="el-message el-message--success"]')
        Contestcheck.contestCheck(self)
        print(msg)
        return msg